-- MySQL Script generated by MySQL Workbench
-- Wed Feb 19 18:12:32 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bringme
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `bringme` ;

-- -----------------------------------------------------
-- Schema bringme
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bringme` ;
-- -----------------------------------------------------
-- Schema bringme
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `bringme` ;

-- -----------------------------------------------------
-- Schema bringme
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bringme` ;
USE `bringme` ;

-- -----------------------------------------------------
-- Table `bringme`.`ADMIN`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bringme`.`ADMIN` (
  `idADMIN` INT NOT NULL AUTO_INCREMENT,
  `pseudo` VARCHAR(45) NOT NULL,
  `password` VARCHAR(500) NOT NULL,
  PRIMARY KEY (`idADMIN`))
ENGINE = InnoDB;

USE `bringme` ;

-- -----------------------------------------------------
-- Table `bringme`.`PROVIDER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bringme`.`PROVIDER` (
  `idProvider` INT NOT NULL AUTO_INCREMENT,
  `providerEmail` VARCHAR(50) NOT NULL,
  `providerPassword` VARCHAR(255) NOT NULL,
  `providerFirstName` VARCHAR(50) NOT NULL,
  `providerBirth` DATE NOT NULL,
  `providerAddress` VARCHAR(250) NOT NULL,
  `providerLastName` VARCHAR(45) NOT NULL,
  `providerPhone` VARCHAR(20) NOT NULL,
  `companyName` VARCHAR(45) NULL,
  `providerRate` FLOAT NULL,
  `providerAnnulation` INT NULL,
  PRIMARY KEY (`idProvider`));


-- -----------------------------------------------------
-- Table `bringme`.`SERVICE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bringme`.`SERVICE` (
  `idService` INT NOT NULL AUTO_INCREMENT,
  `serviceTitle` VARCHAR(50) NOT NULL,
  `servicePrice` FLOAT NOT NULL,
  `serviceDescription` TEXT NOT NULL,
  `serviceValidate` TINYINT NOT NULL,
  PRIMARY KEY (`idService`));


-- -----------------------------------------------------
-- Table `bringme`.`CONTRACT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bringme`.`CONTRACT` (
  `idContract` INT NOT NULL AUTO_INCREMENT,
  `contactDateStart` DATE NULL DEFAULT NULL,
  `contactDateEnd` DATE NULL DEFAULT NULL,
  `contactPrice` FLOAT NULL DEFAULT NULL,
  `idService` INT NULL DEFAULT NULL,
  `idProvider` INT NULL DEFAULT NULL,
  PRIMARY KEY (`idContract`),
  INDEX `CONTRACT_SERVICE_FK` (`idService` ASC) VISIBLE,
  INDEX `CONTRACT_PROVIDER_FK` (`idProvider` ASC) VISIBLE,
  CONSTRAINT `CONTRACT_SERVICE_FK`
    FOREIGN KEY (`idService`)
    REFERENCES `bringme`.`SERVICE` (`idService`)
    ON DELETE CASCADE,
  CONSTRAINT `CONTRACT_PROVIDER_FK`
    FOREIGN KEY (`idProvider`)
    REFERENCES `bringme`.`PROVIDER` (`idProvider`)
    ON DELETE CASCADE);


-- -----------------------------------------------------
-- Table `bringme`.`SUBSCRIPTION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bringme`.`SUBSCRIPTION` (
  `idSubscription` INT NOT NULL AUTO_INCREMENT,
  `subscriptionDateStart` DATE NULL DEFAULT NULL,
  `subscriptionDateEnd` DATE NULL DEFAULT NULL,
  `subscriptionType` INT NULL DEFAULT NULL,
  PRIMARY KEY (`idSubscription`));


-- -----------------------------------------------------
-- Table `bringme`.`USER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bringme`.`USER` (
  `idUser` INT NOT NULL AUTO_INCREMENT,
  `userEmail` VARCHAR(50) NOT NULL,
  `userPassword` VARCHAR(255) NOT NULL,
  `userFirstName` VARCHAR(50) NOT NULL,
  `userLastName` VARCHAR(50) NOT NULL,
  `userBirth` DATE NOT NULL,
  `userAddress` VARCHAR(250) NOT NULL,
  `userCity` VARCHAR(45) NOT NULL,
  `userPostalCode` VARCHAR(45) NOT NULL,
  `userPhone` VARCHAR(20) NOT NULL,
  `userPrivilege` INT NOT NULL,
  `userIp` VARCHAR(50) NOT NULL,
  `userAgent` VARCHAR(500) NOT NULL,
  `userAnnulation` INT NULL,
  PRIMARY KEY (`idUser`));


-- -----------------------------------------------------
-- Table `bringme`.`BILL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bringme`.`BILL` (
  `idBill` INT NOT NULL AUTO_INCREMENT,
  `idUser` INT NOT NULL,
  `billDate` DATE NOT NULL,
  `requestHourStart` VARCHAR(45) NOT NULL,
  `requestHourEnd` VARCHAR(45) NOT NULL,
  `requestTitle` VARCHAR(45) NOT NULL,
  `requestDescription` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idBill`),
  INDEX `BILL_USER_FK` (`idUser` ASC) VISIBLE,
  CONSTRAINT `BILL_USER_FK`
    FOREIGN KEY (`idUser`)
    REFERENCES `bringme`.`USER` (`idUser`)
    ON DELETE CASCADE);


-- -----------------------------------------------------
-- Table `bringme`.`DELIVERY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bringme`.`DELIVERY` (
  `idDelivery` INT NOT NULL AUTO_INCREMENT,
  `deliveryDateStart` DATE NOT NULL,
  `deliveryDateEnd` DATE NOT NULL,
  `provisionHourStart` TIME NOT NULL,
  `provisionType` INT NULL DEFAULT NULL,
  `provisionRate` INT NOT NULL,
  `idService` INT NOT NULL,
  `idProvider` INT NOT NULL,
  `idBill` INT NOT NULL,
  `provisionHourEnd` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idDelivery`),
  INDEX `PROVISION_SERVICE_FK` (`idService` ASC) VISIBLE,
  INDEX `PROVISION_PROVIDER_FK` (`idProvider` ASC) VISIBLE,
  INDEX `PROVISION_BILL_FK` (`idBill` ASC) VISIBLE,
  CONSTRAINT `PROVISION_SERVICE_FK`
    FOREIGN KEY (`idService`)
    REFERENCES `bringme`.`SERVICE` (`idService`)
    ON DELETE CASCADE,
  CONSTRAINT `PROVISION_PROVIDER_FK`
    FOREIGN KEY (`idProvider`)
    REFERENCES `bringme`.`PROVIDER` (`idProvider`)
    ON DELETE CASCADE,
  CONSTRAINT `PROVISION_BILL_FK`
    FOREIGN KEY (`idBill`)
    REFERENCES `bringme`.`BILL` (`idBill`)
    ON DELETE CASCADE);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
